{"version":3,"file":"static/webpack/static\\development\\pages\\detail.js.504ff04bd32a3e7ea481.hot-update.js","sources":["webpack:///./pages/detail.js"],"sourcesContent":["import Head from 'next/head';\r\nimport { withRouter } from 'next/router';\r\nimport { useEffect, useState, useMemo, useCallback } from 'react';\r\nimport Layout from '../components/Layout';\r\n\r\nconst Content = () => <p>This is the detail page</p>;\r\n\r\nfunction Detail(props) {\r\n\r\n  useEffect(() => {\r\n    console.log('detail mount!');\r\n    // console.log('router: ', props.router);\r\n    // 正常路由跳转，在about页面获取路由信息的时候，id为a11，\r\n    // 刷新页面则id为asss，所以尽量二者一致，避免不必要的问题\r\n    // setTimeout(() => props.router.push('/about?id=a11', '/about/asss'), 1000);\r\n    return () => {\r\n      console.log('detail unmount!');\r\n    }\r\n  }, []);\r\n\r\n  // const [count, setCount] = useState(0);\r\n  // const [num, setNum] = useState(0);\r\n\r\n  // 依赖项 num 不变化的话 会执行，但是不会 return一个新的 count，即使 count 变化了\r\n  // const memorized1 = useCallback(() => {\r\n  //   console.log('memorized1: ', count);\r\n  //   return count;\r\n  // }, [count])();\r\n  \r\n  // 依赖项 num 不变化的话 不执行\r\n  // const memorized2 = useMemo(() => {\r\n  //   console.log('memorized2: ', count);\r\n  //   return count;\r\n  // }, [num]);\r\n  \r\n  return (\r\n    <Layout>\r\n      <Head>\r\n        <title>Detail</title>\r\n      </Head>\r\n      <Content />\r\n      <section>\r\n        {/* <p>{memorized1}</p>\r\n        <p>{memorized2}</p>\r\n        <button onClick={() => setCount(count+1)}>count++</button> */}\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nDetail.getInitialProps = async function(context) {\r\n  /**\r\n   * 在当前路由刷新的话，context.req 为真，服务端才有 req/res，在命令行打印 'title: server'；\r\n   * 如果是其他路由跳转过来没有刷新页面的话，context.req 为假，在浏览器控制台打印,\r\n   * 此时document.title是 跳转之前的页面title；\r\n   */\r\n  console.log('title: ', context.req ? 'server' : document.title);\r\n\r\n  // console.log('context: ', context);\r\n\r\n  return {};\r\n}\r\n\r\nexport default withRouter(Detail);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;AAKA;AACA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;;;;A","sourceRoot":""}